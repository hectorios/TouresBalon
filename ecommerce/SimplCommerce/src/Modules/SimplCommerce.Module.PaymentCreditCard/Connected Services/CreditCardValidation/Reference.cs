//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CreditCardValidation
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.baeldung.com/springsoap/gen", ConfigurationName="CreditCardValidation.CountriesPort")]
    public interface CountriesPort
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<CreditCardValidation.getCreditCardValidationResponse1> getCreditCardValidationAsync(CreditCardValidation.getCreditCardValidationRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.baeldung.com/springsoap/gen")]
    public partial class getCreditCardValidationRequest
    {
        
        private string numberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.baeldung.com/springsoap/gen")]
    public partial class getCreditCardValidationResponse
    {
        
        private string issuingNetworkField;
        
        private string numberField;
        
        private double balanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string issuingNetwork
        {
            get
            {
                return this.issuingNetworkField;
            }
            set
            {
                this.issuingNetworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double balance
        {
            get
            {
                return this.balanceField;
            }
            set
            {
                this.balanceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCreditCardValidationRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.baeldung.com/springsoap/gen", Order=0)]
        public CreditCardValidation.getCreditCardValidationRequest getCreditCardValidationRequest;
        
        public getCreditCardValidationRequest1()
        {
        }
        
        public getCreditCardValidationRequest1(CreditCardValidation.getCreditCardValidationRequest getCreditCardValidationRequest)
        {
            this.getCreditCardValidationRequest = getCreditCardValidationRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getCreditCardValidationResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.baeldung.com/springsoap/gen", Order=0)]
        public CreditCardValidation.getCreditCardValidationResponse getCreditCardValidationResponse;
        
        public getCreditCardValidationResponse1()
        {
        }
        
        public getCreditCardValidationResponse1(CreditCardValidation.getCreditCardValidationResponse getCreditCardValidationResponse)
        {
            this.getCreditCardValidationResponse = getCreditCardValidationResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface CountriesPortChannel : CreditCardValidation.CountriesPort, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class CountriesPortClient : System.ServiceModel.ClientBase<CreditCardValidation.CountriesPort>, CreditCardValidation.CountriesPort
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CountriesPortClient() : 
                base(CountriesPortClient.GetDefaultBinding(), CountriesPortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.CountriesPortSoap11.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountriesPortClient(EndpointConfiguration endpointConfiguration) : 
                base(CountriesPortClient.GetBindingForEndpoint(endpointConfiguration), CountriesPortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountriesPortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CountriesPortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountriesPortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CountriesPortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CountriesPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CreditCardValidation.getCreditCardValidationResponse1> CreditCardValidation.CountriesPort.getCreditCardValidationAsync(CreditCardValidation.getCreditCardValidationRequest1 request)
        {
            return base.Channel.getCreditCardValidationAsync(request);
        }
        
        public System.Threading.Tasks.Task<CreditCardValidation.getCreditCardValidationResponse1> getCreditCardValidationAsync(CreditCardValidation.getCreditCardValidationRequest getCreditCardValidationRequest)
        {
            CreditCardValidation.getCreditCardValidationRequest1 inValue = new CreditCardValidation.getCreditCardValidationRequest1();
            inValue.getCreditCardValidationRequest = getCreditCardValidationRequest;
            return ((CreditCardValidation.CountriesPort)(this)).getCreditCardValidationAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CountriesPortSoap11))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CountriesPortSoap11))
            {
                return new System.ServiceModel.EndpointAddress("http://10.39.1.34:8090/ws");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CountriesPortClient.GetBindingForEndpoint(EndpointConfiguration.CountriesPortSoap11);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CountriesPortClient.GetEndpointAddress(EndpointConfiguration.CountriesPortSoap11);
        }
        
        public enum EndpointConfiguration
        {
            
            CountriesPortSoap11,
        }
    }
}
